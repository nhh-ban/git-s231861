?readLines
library(tidyverse)
raw_file <- readLines(con = "suites_dw_Table1.txt")
print(raw_file)
head(raw_file)
tail(raw_file)
substr(x = raw_file, start = 1, stop = 4)
substr(x = raw_file, start = 1, stop = 2)
# What do you need to replace the two question marks with in order to extract
# the first two letters?
substr(x = raw_file, start = 1, stop = 3)
substr(x = raw_file, start = 1, stop = 2)
# What do you need to replace the two question marks with in order to extract
# the first two letters?
substr(x = raw_file, start = 1, stop = 3)
# What do you need to replace the two question marks with in order to extract
# the first two letters?
substr(x = raw_file, 1, 3)
# What do you need to replace the two question marks with in order to extract
# the first two letters?
substr(x = raw_file,start = 1,stop = 3)
?substr
?which
L <-
(substr(x = raw_file, start = 1, stop = 2) == "--") %>%
which() %>%
min()
print(L)
# Save the variable descriptions (i.e. the information in lines 1:(L-2)) in a
# text-file for future reference using the cat()-function. The first argument is
# the information that we want to print out. In order to get each element in the
# "raw_file"-vector on a separate line we also provide the sep-argument, where
# we put the "end-of-line"-character "\n". We also need to come up with a file
# name. Replace the question marks:
cat(raw_file, sep = "\n", file = "updated_file")
cat(raw_file, sep = "\n", file = "updated_file")
tail(raw_file)
cat(L, sep = "\n", file = "updated_file")
?cat
cat(1:(L-2), sep = "\n", file = "updated_file")
lines_to_save <- raw_file[1:(L - 2)]
# Specify the file name
file_name <- "variable_descriptions.txt"
# Use cat() to save the lines to a text file
cat(lines_to_save, file = file_name, sep = "\n")
print(lines_to_save)
rm(file_name)
rm(lines_to_save)
saved_lines <- raw_file[1:(L-2)]
cat(saved_lines, sep = "\n", file = "variable_description.txt")
?str_split
variable_names <-
str_split(string = (L-1), pattern = "\\|") %>%
unlist() %>%
str_trim()
variable_names <-
str_split(string = (L-2), pattern = "\\|") %>%
unlist() %>%
str_trim()
print(variable_names)
variable_names <-
str_split(string = raw_file[L-1], pattern = "\\|") %>%
unlist() %>%
str_trim()
print(variable_names)
variable_names <-
str_split(string = raw_file[L-2], pattern = "\\|") %>%
unlist() %>%
str_trim()
variable_names <-
str_split(string = raw_file[L-1], pattern = "\\|") %>%
unlist() %>%
str_trim()
?cat()
comma_separated_values <-
variable_names %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
print(comma_separated_values)
print(variable_names)
comma_separated_values <-
raw_file %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
print(comma_separated_values)
comma_separated_values <-
variable_names %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
print(comma_separated_values)
print(variable_names)
comma_separated_values <-
raw_file %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
tail(comma_separated_values)
tail(raw_file)
head(comma_separated_values)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
head(comma_separated_values_with_names)
tail(comma_separated_values_with_names)
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "Values_w_names.txt")
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "prepared_file.txt")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("prepared_file.txt")
print(galaxies)
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "prepared_file")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("prepared_file")
rm(galaxies)
galaxies <- read_csv("prepared_file")
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "prepared_file.txt")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("prepared_file.txt")
extracted_names <-
raw_file[, !(names(raw_file) %>%
variable_names)]
extracted_names <-
raw_file[, !(names(raw_file) %>%
variable_names)]
extracted_names <-
raw_file[, !(names(raw_file) %in%
variable_names)]
extracted_names <-
raw_file[, !(names(raw_file) %in%
variable_names)]
extracted_names <-
raw_file[, !(names(raw_file) %in% variable_names)]
rm(galaxies)
head(comma_separated_values)
values_only <- comma_separated_values[-1]
print(values_only)
rm(values_only)
data_values <- raw_file[, !(names(raw_file) %in% variable_names)]
data_values <- raw_file[, !(names(raw_file) %in% saved_lines)]
print(comma_separated_values)
print(variable_names)
cat(raw_file[1:(L-2)], sep = "\n", file = "variable_description.txt")
rm(saved_lines)
comma_separated_values <-
variable_names %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
print(comma_separated_values)
comma_separated_values <-
raw_file %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
head(comma_separated_values_with_names)
comma_separated_values_with_names <-
c(paste(comma_separated_values, collapse = ","),
raw_file)
print(comma_separated_values_with_names)
substr(x = raw_file,start = 1,stop = 2)
comma_separated_values <-
raw_file[L-1] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values <-
raw_file - raw_file[L-1] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values <-
raw_file[ -(L-1)] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
print(comma_separated_values)
comma_separated_values <-
raw_file[ -(variable_names)] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values <-
raw_file[ !(variable_names)] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values <-
raw_file %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values <-
variable_names %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
head(comma_separated_values_with_names)
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "updated_file.txt")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("udated_file.txt")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("updated_file.txt")
View(galaxies)
View(galaxies)
comma_separated_values <-
raw_file %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "updated_file.txt")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("updated_file.txt")
comma_separated_values <-
raw_file[14:length(raw_file)] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values <-
raw_file[15:length(raw_file)] %>%
gsub("\\|", ",", .) %>%
gsub(" ", "", .)
comma_separated_values_with_names <-
c(paste(variable_names, collapse = ","),
comma_separated_values)
# Replace the question mark and come up with a file name
cat(comma_separated_values_with_names, sep = "\n", file = "updated_file.txt")
# Read the file back in as a normal csv-file. The readr-package is part of
# tidyverse, so it is already loaded.
galaxies <- read_csv("updated_file.txt")
View(galaxies)
View(galaxies)
